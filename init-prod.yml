Parameters:
  NameOfService:
    Description: "Name of the service this stack is used for"
    Type: String

  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Default is t2.micro.

  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: "ami-066784287e358dad1"
    us-east-2: 
      AMI: "ami-0490fddec0cbeb88b"
    us-west-1:
      AMI: "ami-04fdea8e25817cd69"
    us-west-2:
      AMI: "ami-02d3770deb1c746ec"

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap [AmiRegionMap, !Ref "AWS::Region", AMI]
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -xe
          sudo yum update -y
          sudo  yum install aws-cfn-bootstrap -y
          sudo yum install php php-cli php-common -y
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init: 
        config:
          packages:
            yum:
              httpd: []
              wget: []
              unzip: []
              git: []
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>
                <h1>Welcome to CloudFormation.</h1>
                <p>This site is deployed via CloudFormation.</p>
                </body>
                </html>
          commands: 
            test:
              command: "wget https://www.tooplate.com/zip-templates/2100_artist.zip && unzip 2100_artist.zip && cp -r 2100_artist/* /var/www/html/"
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 77.234.89.115/32

Outputs:
  PrintInfo:
    Value: !GetAtt [WebServer, PublicDnsName]